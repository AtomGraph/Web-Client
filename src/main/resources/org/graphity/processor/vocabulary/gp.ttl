@base <http://processor.graphity.org/ontology> .

# @prefix :	<#> .
@prefix rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:	<http://www.w3.org/2001/XMLSchema#> .
@prefix owl:	<http://www.w3.org/2002/07/owl#> .
@prefix skos:	<http://www.w3.org/2004/02/skos/core#> .
@prefix sd:	<http://www.w3.org/ns/sparql-service-description#> .
@prefix sp:	<http://spinrdf.org/sp#> .
@prefix spin:	<http://spinrdf.org/spin#> .
@prefix spl:	<http://spinrdf.org/spl#> .
@prefix dc:	<http://purl.org/dc/elements/1.1/> .
@prefix dct:	<http://purl.org/dc/terms/> .
@prefix lda:	<http://purl.org/linked-data/api/vocab#> .
@prefix vann:	<http://purl.org/vocab/vann/> .
@prefix sioc:	<http://rdfs.org/sioc/ns#> .
@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix http:   <http://www.w3.org/2011/http#> .

<#> a owl:Ontology ;
    owl:imports sp:, spin:, spl: ;
    owl:versionInfo "1.0.14" ;
    dct:title "Graphity Processor ontology" ;
    rdfs:label "Graphity Processor ontology" ;
    dct:description "Graphity Linked Data processor ontology. Should be imported and reused by all extending applications" ;
    dct:created "2012-10-26T01:04:00+03:00"^^xsd:dateTime ;
    dct:modified "2012-12-19T02:29:00+03:00"^^xsd:dateTime, "2013-03-09T12:33:00+03:00"^^xsd:dateTime ;
    vann:preferredNamespaceUri "http://processor.graphity.org/ontology#" ;
    vann:preferredNamespacePrefix "gp";
    foaf:homepage <http://processor.graphity.org/ontology> ;
    dct:license <http://www.opendatacommons.org/licenses/pddl/1.0/> ;
    dct:creator <http://semantic-web.dk/#martynas> ;
    rdfs:seeAlso <#Project> .

# PROPERTIES

<#service> a owl:ObjectProperty ;
    rdfs:domain sioc:Space ;
    rdfs:range sd:Service ;
    rdfs:label "SPARQL service" ;
    rdfs:isDefinedBy <#> .

<#base> a owl:ObjectProperty ;
    rdfs:range sioc:Space ;
    rdfs:label "Base URI" ;
    rdfs:isDefinedBy <#> .

<#graphStore> a owl:ObjectProperty ;
    rdfs:domain sd:Service ;
    rdfs:label "Graph Store" ;
    rdfs:isDefinedBy <#> .

<#uriTemplate> a owl:DatatypeProperty ;
    rdfs:domain owl:Class ; # rdfs:domain <#Template> ;
    rdfs:range rdfs:Literal ;
    rdfs:label "URI template" ;
    rdfs:comment "URI template for resource matching and skolemization (JAX-RS syntax)" ;
    rdfs:seeAlso <http://docs.oracle.com/cd/E19798-01/821-1841/6nmq2cp26/index.html> ;
    rdfs:isDefinedBy <#> .

# <#itemTemplate> a owl:DatatypeProperty ;
#    rdfs:domain <#Template> ;
#    rdfs:range rdfs:Literal ;
#    rdfs:label "URI template for POSTed resources (JAX-RS syntax)" ;
#    rdfs:isDefinedBy <#> .

<#cacheControl> a owl:DatatypeProperty ;
    rdfs:subPropertyOf http:fieldValue ;
    rdfs:label "Cache control header value" ;
    rdfs:isDefinedBy <#> .

<#limit> a owl:DatatypeProperty ;
    rdfs:domain <#Template> ;
    rdfs:range xsd:long ;
    rdfs:label "The LIMIT solution modifier" ;
    rdfs:comment "Sets sp:limit value for the first sp:Select subquery" ;
    rdfs:seeAlso sp:limit ;
    rdfs:isDefinedBy <#> .

<#offset> a owl:DatatypeProperty ;
    rdfs:domain <#Template> ;
    rdfs:range xsd:long ;
    rdfs:label "The OFFSET solution modifier" ;
    rdfs:comment "Sets sp:offset value for the first sp:Select subquery" ;
    rdfs:seeAlso sp:offset ;
    rdfs:isDefinedBy <#> .

<#orderBy> a owl:DatatypeProperty ;
    rdfs:domain <#Template> ;
    rdfs:range xsd:string ;
    rdfs:label "ORDER BY variable name" ;
    rdfs:comment "SPIN expects an rdf:List of OrderByConditions instead" ;
    rdfs:seeAlso sp:orderBy ;
    rdfs:isDefinedBy <#> .

# CLASSES

<#Template> a owl:Class ;
    <#uriTemplate> "/templates/{isPrimaryTopicOf.uuid}" ;
    rdfs:label "Resource template" ;
    rdfs:isDefinedBy <#> .

# QUERIES & TEMPLATES

<#DescribeInstancesTemplate> a spin:Template ;
    spin:body <#DescribeInstances> ;
    spin:constraint [ a       spl:Argument ;
		spl:predicate <#type> ;
		spl:valueType rdfs:Resource
	] ;
    rdfs:isDefinedBy <#> .

<#DescribeInstances>    a       sp:Describe, sp:Query ;
      sp:resultNodes (spin:_this _:instanceVar) ;
      sp:text """DESCRIBE ?this ?instance WHERE {
    {
        SELECT ?instance
        WHERE {
            ?instance a ?type .
        }
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:SubQuery ;
                  sp:query
                          [ a       sp:Select ;
                            sp:resultVariables (_:instanceVar) ;
                            sp:where ([ sp:object
                                                [ sp:varName "type"^^xsd:string
                                                ] ;
                                        sp:predicate rdf:type ;
                                        sp:subject _:instanceVar
                                      ])
                          ]
                ]) .

_:instanceVar  sp:varName "instance"^^xsd:string .

# ====

<#DescribePropertiesTemplate> a spin:Template ;
    spin:body <#DescribeProperties> ;
    rdfs:isDefinedBy <#> .

<#DescribeProperties>    a       sp:Dscribe, sp:Query ;
      sp:resultNodes (spin:_this _:propertyVar) ;
      sp:text """PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
DESCRIBE ?this ?property WHERE {
    {
        SELECT ?property
        WHERE {
            {
                ?property a rdf:Property .
            }
            UNION
            {
                ?property a owl:ObjectProperty .
            }
            UNION
            {
                ?property a owl:DatatypeProperty .
            } .
        }
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:SubQuery ;
                  sp:query
                          [ a       sp:Select ;
                            sp:resultVariables (_:propertyVar) ;
                            sp:where ([ a       sp:Union ;
                                        sp:elements (([ sp:object rdf:Property ;
                                                      sp:predicate rdf:type ;
                                                      sp:subject _:propertyVar
                                                    ]) ([ sp:object owl:ObjectProperty ;
                                                      sp:predicate rdf:type ;
                                                      sp:subject _:propertyVar
                                                    ]) ([ sp:object owl:DatatypeProperty ;
                                                      sp:predicate rdf:type ;
                                                      sp:subject _:propertyVar
                                                    ]))
                                      ])
                          ]
                ]) .

_:propertyVar  sp:varName "property"^^xsd:string .

# ====

<#DescribeTemplate> a spin:Template ;
    spin:body <#Describe> ;
    rdfs:isDefinedBy <#> .

<#Describe>    a       sp:Describe, sp:Query ;
      sp:resultNodes (spin:_this) ;
      sp:text """DESCRIBE ?this"""^^xsd:string .

# ====

<#DescribeTopicTemplate> a spin:Template ;
    spin:body <#DescribeTopic> ;
    rdfs:isDefinedBy <#> .

<#DescribeTopic>    a       sp:Describe, sp:Query ;
      sp:resultNodes (_:topicVar) ;
      sp:text """PREFIX foaf: <http://xmlns.com/foaf/0.1/>
DESCRIBE ?topic WHERE {
    ?topic foaf:isPrimaryTopicOf ?this .
}"""^^xsd:string ;
      sp:where ([ sp:object spin:_this ;
                  sp:predicate foaf:isPrimaryTopicOf ;
                  sp:subject _:topicVar
                ]) .

_:topicVar  sp:varName "topic"^^xsd:string .

# ====

<#DescribeWithTopicTemplate> a spin:Template ;
    spin:body <#DescribeWithTopic> ;
    rdfs:isDefinedBy <#> .

<#DescribeWithTopic>    a       sp:Describe, sp:Query ;
      sp:resultNodes (spin:_this _:topicVar) ;
      sp:text """PREFIX foaf: <http://xmlns.com/foaf/0.1/>
DESCRIBE ?this ?topic WHERE {
    ?topic foaf:isPrimaryTopicOf ?this .
}"""^^xsd:string ;
      sp:where ([ sp:object spin:_this ;
                  sp:predicate foaf:isPrimaryTopicOf ;
                  sp:subject _:topicVar
                ]) .

_:topicVar  sp:varName "topic"^^xsd:string .

# ====

<#DescribeFromGraphWithTopicTemplate> a spin:Template ;
    spin:body <#DescribeFromGraphWithTopic> ;
    spin:constraint [ a       spl:Argument ;
		spl:predicate <#graph> ;
		spl:valueType rdfs:Resource
	] ;
    rdfs:isDefinedBy <#> .

<#DescribeFromGraphWithTopic>    a       sp:Describe ;
      sp:resultNodes (spin:_this _:topicVar) ;
      sp:text """PREFIX foaf: <http://xmlns.com/foaf/0.1/>
DESCRIBE ?this ?topic WHERE {
    GRAPH ?graph {
        ?topic foaf:isPrimaryTopicOf ?this .
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:NamedGraph ;
                  sp:elements ([ sp:object spin:_this ;
                              sp:predicate foaf:isPrimaryTopicOf ;
                              sp:subject _:topicVar
                            ]) ;
                  sp:graphNameNode
                          [ sp:varName "graph"^^xsd:string
                          ]
                ]) .

_:topicVar  sp:varName "topic"^^xsd:string .

# ====

<#DescribeWithChildrenTemplate> a spin:Template ;
    spin:body <#DescribeWithChildren> ;
    rdfs:isDefinedBy <#> .

<#DescribeWithChildren>    a       sp:Describe ;
      sp:resultNodes (spin:_this _:docVar _:thingVar) ;
      sp:text """PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX sioc: <http://rdfs.org/sioc/ns#>
DESCRIBE ?this ?doc ?thing WHERE {
    OPTIONAL {
        {
            ?this foaf:primaryTopic ?thing .
        }
        UNION
        {
            ?doc sioc:has_space ?this .
        }
        UNION
        {
            {
                SELECT ?doc ?thing
                WHERE {
                    ?doc sioc:has_container ?this .
                    OPTIONAL {
                        ?doc foaf:primaryTopic ?thing .
                    } .
                }
            } .
        } .
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:Optional ;
                  sp:elements ([ a       sp:Union ;
                              sp:elements (([ sp:object _:thingVar ;
                                            sp:predicate foaf:primaryTopic ;
                                            sp:subject spin:_this
                                          ]) ([ sp:object spin:_this ;
                                            sp:predicate sioc:has_space ;
                                            sp:subject _:docVar
                                          ]) ([ a       sp:SubQuery ;
                                            sp:query
                                                    [ a       sp:Select ;
                                                      sp:resultVariables (_:docVar _:thingVar) ;
                                                      sp:where ([ sp:object spin:_this ;
                                                                  sp:predicate sioc:has_container ;
                                                                  sp:subject _:docVar
                                                                ] [ a       sp:Optional ;
                                                                  sp:elements ([ sp:object _:thingVar ;
                                                                              sp:predicate foaf:primaryTopic ;
                                                                              sp:subject _:docVar
                                                                            ])
                                                                ])
                                                    ]
                                          ]))
                            ])
                ]) .

_:docVar  sp:varName "doc"^^xsd:string .
_:thingVar  sp:varName "thing"^^xsd:string .

# ====

<#DescribeFromGraphWithChildrenTemplate> a spin:Template ;
    spin:body <#DescribeFromGraphWithChildren> ;
    rdfs:isDefinedBy <#> .

<#DescribeFromGraphWithChildren>    a       sp:Describe ;
      sp:resultNodes (spin:_this _:docVar _:thingVar) ;
      sp:text """PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX sioc: <http://rdfs.org/sioc/ns#>
DESCRIBE ?this ?doc ?thing WHERE {
    OPTIONAL {
        {
            GRAPH ?graph {
                ?this foaf:primaryTopic ?thing .
            } .
        }
        UNION
        {
            GRAPH ?docGraph {
                ?doc sioc:has_space ?this .
            } .
        }
        UNION
        {
            {
                SELECT ?doc ?thing
                WHERE {
                    GRAPH ?childGraph {
                        ?doc sioc:has_container ?this .
                        OPTIONAL {
                            ?doc foaf:primaryTopic ?thing .
                        } .
                    } .
                }
            } .
        } .
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:Optional ;
                  sp:elements ([ a       sp:Union ;
                              sp:elements (([ a       sp:NamedGraph ;
                                            sp:elements ([ sp:object _:thingVar ;
                                                        sp:predicate foaf:primaryTopic ;
                                                        sp:subject spin:_this
                                                      ]) ;
                                            sp:graphNameNode
                                                    [ sp:varName "graph"^^xsd:string
                                                    ]
                                          ]) ([ a       sp:NamedGraph ;
                                            sp:elements ([ sp:object spin:_this ;
                                                        sp:predicate sioc:has_space ;
                                                        sp:subject _:docVar
                                                      ]) ;
                                            sp:graphNameNode
                                                    [ sp:varName "docGraph"^^xsd:string
                                                    ]
                                          ]) ([ a       sp:SubQuery ;
                                            sp:query
                                                    [ a       sp:Select ;
                                                      sp:resultVariables (_:docVar _:thingVar) ;
                                                      sp:where ([ a       sp:NamedGraph ;
                                                                  sp:elements ([ sp:object spin:_this ;
                                                                              sp:predicate sioc:has_container ;
                                                                              sp:subject _:docVar
                                                                            ] [ a       sp:Optional ;
                                                                              sp:elements ([ sp:object _:thingVar ;
                                                                                          sp:predicate foaf:primaryTopic ;
                                                                                          sp:subject _:docVar
                                                                                        ])
                                                                            ]) ;
                                                                  sp:graphNameNode
                                                                          [ sp:varName "childGraph"^^xsd:string
                                                                          ]
                                                                ])
                                                    ]
                                          ]))
                            ])
                ]) .

_:docVar  sp:varName "doc"^^xsd:string .
_:thingVar  sp:varName "thing"^^xsd:string .

# ====

<#ConstructTemplate> a spin:Template ;
    spin:body <#Construct> ;
    rdfs:isDefinedBy <#> .

<#Construct>    a       sp:Construct, sp:Query ;
      sp:templates ([ sp:object _:objectVar ;
                  sp:predicate _:propertyVar ;
                  sp:subject spin:_this
                ]) ;
      sp:text """CONSTRUCT {
    ?this ?property ?object .
}
WHERE {
    ?this ?property ?object .
}"""^^xsd:string ;
      sp:where ([ sp:object _:objectVar ;
                  sp:predicate _:propertyVar ;
                  sp:subject spin:_this
                ]) .

spin:_this  sp:varName "this"^^xsd:string .
_:objectVar  sp:varName "object"^^xsd:string .
_:propertyVar  sp:varName "property"^^xsd:string .

# ====

<#ConstructResourcesTemplate> a spin:Template ;
    spin:body <#ConstructResources> ;
    rdfs:isDefinedBy <#> .

<#ConstructResources>    a       sp:Construct, sp:Query ;
      sp:templates ([ sp:object _:objectVar ;
                  sp:predicate _:propertyVar ;
                  sp:subject _:subjectVar
                ]) ;
      sp:text """CONSTRUCT {
    ?subject ?property ?object .
}
WHERE {
    ?subject ?property ?object .
}"""^^xsd:string ;
      sp:where ([ sp:object _:objectVar ;
                  sp:predicate _:propertyVar ;
                  sp:subject _:subjectVar
                ]) .

_:subjectVar  sp:varName "subject"^^xsd:string .
_:propertyVar  sp:varName "property"^^xsd:string .
_:objectVar  sp:varName "object"^^xsd:string .

# ====

<#DescribeNamedGraphsTemplate> a spin:Template ;
    spin:body <#DescribeNamedGraphs> ;
    rdfs:isDefinedBy <#> .

<#DescribeNamedGraphs>    a       sp:Describe, sp:Query ;
      sp:resultNodes (_:graphVar) ;
      sp:text """DESCRIBE ?graph WHERE {
    {
        SELECT ?graph
        WHERE {
            GRAPH ?graph {
                ?subject ?property ?object .
            } .
        }
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:SubQuery ;
                  sp:query
                          [ a       sp:Select ;
                            sp:resultVariables (_:graphVar) ;
                            sp:where ([ a       sp:NamedGraph ;
                                        sp:elements ([ sp:object
                                                            [ sp:varName "object"^^xsd:string
                                                            ] ;
                                                    sp:predicate
                                                            [ sp:varName "property"^^xsd:string
                                                            ] ;
                                                    sp:subject
                                                            [ sp:varName "subject"^^xsd:string
                                                            ]
                                                  ]) ;
                                        sp:graphNameNode _:graphVar
                                      ])
                          ]
                ]) .

_:graphVar  sp:varName "graph"^^xsd:string .

# ====

<#ConstructGraphResourcesTemplate> a spin:Template ;
    spin:body <#ConstructGraphResources> ;
    spin:constraint [ a       spl:Argument ;
		spl:predicate <#graph> ;
		spl:valueType rdfs:Resource
	] ;
    rdfs:isDefinedBy <#> .

<#ConstructGraphResources>    a       sp:Construct, sp:Query ;
      sp:templates ([ sp:object _:objectVar ;
                  sp:predicate _:propertyVar ;
                  sp:subject _:subjectVar
                ]) ;
      sp:text """CONSTRUCT {
    ?subject ?property ?object .
}
WHERE {
    GRAPH ?this {
        ?subject ?property ?object .
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:NamedGraph ;
                  sp:elements ([ sp:object _:objectVar ;
                              sp:predicate _:propertyVar ;
                              sp:subject _:subjectVar
                            ]) ;
                  sp:graphNameNode
                          [ sp:varName "graph"^^xsd:string
                          ]
                ]) .

_:subjectVar  sp:varName "subject"^^xsd:string .
_:propertyVar  sp:varName "property"^^xsd:string .
_:objectVar  sp:varName "object"^^xsd:string .

# ====

<#DescribeGraphInstancesTemplate> a spin:Template ;
    spin:body <#DescribeGraphInstances> ;
    spin:constraint [ a       spl:Argument ;
		spl:predicate <#type> ;
		spl:valueType rdfs:Resource
	] ,
	[ a       spl:Argument ;
		spl:predicate <#graph> ;
		spl:valueType rdfs:Resource
	] ;
    rdfs:isDefinedBy <#> .

<#DescribeGraphInstances>    a       sp:Describe, sp:Query ;
      sp:resultNodes (spin:_this _:instanceVar) ;
      sp:text """DESCRIBE ?this ?instance WHERE {
    {
        SELECT ?instance
        WHERE {
            GRAPH ?graph {
                ?instance a ?type .
            } .
        }
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:SubQuery ;
                  sp:query
                          [ a       sp:Select ;
                            sp:resultVariables (_:instanceVar) ;
                            sp:where ([ a       sp:NamedGraph ;
                                        sp:elements ([ sp:object
                                                            [ sp:varName "type"^^xsd:string
                                                            ] ;
                                                    sp:predicate rdf:type ;
                                                    sp:subject _:instanceVar
                                                  ]) ;
                                        sp:graphNameNode
                                                [ sp:varName "graph"^^xsd:string
                                                ]
                                      ])
                          ]
                ]) .

_:instanceVar  sp:varName "instance"^^xsd:string .

# ====

<#DescribeLabelResourcesTemplate> a spin:Template ;
    spin:body <#DescribeLabelResources> ;
    rdfs:isDefinedBy <#> .

<#DescribeLabelResources>    a       sp:Describe ;
      sp:resultNodes (_:resourceVar) ;
      sp:text """DESCRIBE ?resource WHERE {
    {
        SELECT ?resource
        WHERE {
            ?resource ((((((rdfs:label|dc:title)|dct:title)|foaf:name)|foaf:givenName)|foaf:familyName)|sioc:name)|skos:prefLabel ?label .
            FILTER isURI(?resource) .
        }
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:SubQuery ;
                  sp:query
                          [ a       sp:Select ;
                            sp:resultVariables (_:resourceVar) ;
                            sp:where ([ a       sp:TriplePath ;
                                        sp:object
                                                [ sp:varName "label"^^xsd:string
                                                ] ;
                                        sp:path [ a       sp:AltPath ;
                                                  sp:path1
                                                          [ a       sp:AltPath ;
                                                            sp:path1
                                                                    [ a       sp:AltPath ;
                                                                      sp:path1
                                                                              [ a       sp:AltPath ;
                                                                                sp:path1
                                                                                        [ a       sp:AltPath ;
                                                                                          sp:path1
                                                                                                  [ a       sp:AltPath ;
                                                                                                    sp:path1
                                                                                                            [ a       sp:AltPath ;
                                                                                                              sp:path1 rdfs:label ;
                                                                                                              sp:path2 dc:title
                                                                                                            ] ;
                                                                                                    sp:path2 dct:title
                                                                                                  ] ;
                                                                                          sp:path2 foaf:name
                                                                                        ] ;
                                                                                sp:path2 foaf:givenName
                                                                              ] ;
                                                                      sp:path2 foaf:familyName
                                                                    ] ;
                                                            sp:path2 sioc:name
                                                          ] ;
                                                  sp:path2 skos:prefLabel
                                                ] ;
                                        sp:subject _:resourceVar
                                      ] [ a       sp:Filter ;
                                        sp:expression
                                                [ a       sp:isURI ;
                                                  sp:arg1 _:resourceVar
                                                ]
                                      ])
                          ]
                ]) .

_:resourceVar  sp:varName "resource"^^xsd:string .

# ===

<#DescribeGraphLabelResourcesTemplate> a spin:Template ;
    spin:body <#DescribeGraphLabelResources> ;
    rdfs:isDefinedBy <#> .

<#DescribeGraphLabelResources>    a       sp:Describe ;
      sp:resultNodes (_:resourceVar) ;
      sp:text """DESCRIBE ?resource WHERE {
    {
        SELECT ?resource
        WHERE {
            GRAPH ?graph {
                ?resource ((((((rdfs:label|dc:title)|dct:title)|foaf:name)|foaf:givenName)|foaf:familyName)|sioc:name)|skos:prefLabel ?label .
                FILTER isURI(?resource) .
            } .
        }
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:SubQuery ;
                  sp:query
                          [ a       sp:Select ;
                            sp:resultVariables (_:resourceVar) ;
                            sp:where ([ a       sp:NamedGraph ;
                                        sp:elements ([ a       sp:TriplePath ;
                                                    sp:object
                                                            [ sp:varName "label"^^xsd:string
                                                            ] ;
                                                    sp:path [ a       sp:AltPath ;
                                                              sp:path1
                                                                      [ a       sp:AltPath ;
                                                                        sp:path1
                                                                                [ a       sp:AltPath ;
                                                                                  sp:path1
                                                                                          [ a       sp:AltPath ;
                                                                                            sp:path1
                                                                                                    [ a       sp:AltPath ;
                                                                                                      sp:path1
                                                                                                              [ a       sp:AltPath ;
                                                                                                                sp:path1
                                                                                                                        [ a       sp:AltPath ;
                                                                                                                          sp:path1 rdfs:label ;
                                                                                                                          sp:path2 dc:title
                                                                                                                        ] ;
                                                                                                                sp:path2 dct:title
                                                                                                              ] ;
                                                                                                      sp:path2 foaf:name
                                                                                                    ] ;
                                                                                            sp:path2 foaf:givenName
                                                                                          ] ;
                                                                                  sp:path2 foaf:familyName
                                                                                ] ;
                                                                        sp:path2 sioc:name
                                                                      ] ;
                                                              sp:path2 skos:prefLabel
                                                            ] ;
                                                    sp:subject _:resourceVar
                                                  ] [ a       sp:Filter ;
                                                    sp:expression
                                                            [ a       sp:isURI ;
                                                              sp:arg1 _:resourceVar
                                                            ]
                                                  ]) ;
                                        sp:graphNameNode
                                                [ sp:varName "graph"^^xsd:string
                                                ]
                                      ])
                          ]
                ]) .

_:resourceVar  sp:varName "resource"^^xsd:string .

# ===

<#DescribeLabelPropertiesTemplate> a spin:Template ;
    spin:body <#DescribeLabelProperties> ;
    rdfs:isDefinedBy <#> .

<#DescribeLabelProperties>    a       sp:Describe ;
      sp:resultNodes (_:propertyVar) ;
      sp:text """PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
DESCRIBE ?property WHERE {
    {
        SELECT ?property
        WHERE {
            {
                ?property a rdf:Property .
            }
            UNION
            {
                ?property a owl:ObjectProperty .
            }
            UNION
            {
                ?property a owl:DatatypeProperty .
            } .
            ?property ((((((rdfs:label|dc:title)|dct:title)|foaf:name)|foaf:givenName)|foaf:familyName)|sioc:name)|skos:prefLabel ?label .
        }
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:SubQuery ;
                  sp:query
                          [ a       sp:Select ;
                            sp:resultVariables (_:propertyVar) ;
                            sp:where ([ a       sp:Union ;
                                        sp:elements (([ sp:object rdf:Property ;
                                                      sp:predicate rdf:type ;
                                                      sp:subject _:propertyVar
                                                    ]) ([ sp:object owl:ObjectProperty ;
                                                      sp:predicate rdf:type ;
                                                      sp:subject _:propertyVar
                                                    ]) ([ sp:object owl:DatatypeProperty ;
                                                      sp:predicate rdf:type ;
                                                      sp:subject _:propertyVar
                                                    ]))
                                      ] [ a       sp:TriplePath ;
                                        sp:object
                                                [ sp:varName "label"^^xsd:string
                                                ] ;
                                        sp:path [ a       sp:AltPath ;
                                                  sp:path1
                                                          [ a       sp:AltPath ;
                                                            sp:path1
                                                                    [ a       sp:AltPath ;
                                                                      sp:path1
                                                                              [ a       sp:AltPath ;
                                                                                sp:path1
                                                                                        [ a       sp:AltPath ;
                                                                                          sp:path1
                                                                                                  [ a       sp:AltPath ;
                                                                                                    sp:path1
                                                                                                            [ a       sp:AltPath ;
                                                                                                              sp:path1 rdfs:label ;
                                                                                                              sp:path2 dc:title
                                                                                                            ] ;
                                                                                                    sp:path2 dct:title
                                                                                                  ] ;
                                                                                          sp:path2 foaf:name
                                                                                        ] ;
                                                                                sp:path2 foaf:givenName
                                                                              ] ;
                                                                      sp:path2 foaf:familyName
                                                                    ] ;
                                                            sp:path2 sioc:name
                                                          ] ;
                                                  sp:path2 skos:prefLabel
                                                ] ;
                                        sp:subject _:propertyVar
                                      ])
                          ]
                ]) .
                
_:propertyVar  sp:varName "property"^^xsd:string .

# ===

<#DescribeGraphLabelPropertiesTemplate> a spin:Template ;
    spin:body <#DescribeGraphLabelProperties> ;
    rdfs:isDefinedBy <#> .

<#DescribeGraphLabelProperties>    a       sp:Describe ;
      sp:text """PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX sioc: <http://rdfs.org/sioc/ns#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dct:  <http://purl.org/dc/terms/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

DESCRIBE ?property WHERE {
    {
        SELECT ?property
        WHERE {
            GRAPH ?graph {
                {
                    ?property a rdf:Property .
                }
                UNION
                {
                    ?property a owl:ObjectProperty .
                }
                UNION
                {
                    ?property a owl:DatatypeProperty .
                } .
                ?property ((((((rdfs:label|dc:title)|dct:title)|foaf:name)|foaf:givenName)|foaf:familyName)|sioc:name)|skos:prefLabel ?label .
            }
        }
    } .
}"""^^xsd:string .
 
# ====

<#DeleteTemplate> a spin:Template ;
    spin:body <#Delete> ;
    rdfs:isDefinedBy <#> .

<#Delete>    a       sp:DeleteWhere ;
      sp:text """DELETE WHERE {
    ?this ?p ?o .
}"""^^xsd:string ;
      sp:where ([ sp:object
                          [ sp:varName "o"^^xsd:string
                          ] ;
                  sp:predicate
                          [ sp:varName "p"^^xsd:string
                          ] ;
                  sp:subject
                          [ sp:varName "this"^^xsd:string
                          ]
                ]) .

# ====

<#DeleteFromGraphTemplate> a spin:Template ;
    spin:body <#DeleteFromGraph> ;
    rdfs:isDefinedBy <#> .

<#DeleteFromGraph>    a       sp:DeleteWhere ;
      sp:text """DELETE WHERE {
    GRAPH ?g {
        ?this ?p ?o .
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:NamedGraph ;
                  sp:elements ([ sp:object
                                      [ sp:varName "o"^^xsd:string
                                      ] ;
                              sp:predicate
                                      [ sp:varName "p"^^xsd:string
                                      ] ;
                              sp:subject
                                      [ sp:varName "this"^^xsd:string
                                      ]
                            ]) ;
                  sp:graphNameNode
                          [ sp:varName "g"^^xsd:string
                          ]
                ]) .

# ====

<#DeleteWithTopicTemplate> a spin:Template ;
    spin:body <#DeleteWithTopic> ;
    rdfs:isDefinedBy <#> .

<#DeleteWithTopic>    a       sp:DeleteWhere ;
      sp:text """DELETE WHERE {
    ?this ?p ?o .
    ?primaryTopic foaf:isPrimaryTopicOf ?this .
    ?primaryTopic ?x ?y .
}"""^^xsd:string ;
      sp:where ([ sp:object
                          [ sp:varName "o"^^xsd:string
                          ] ;
                  sp:predicate
                          [ sp:varName "p"^^xsd:string
                          ] ;
                  sp:subject spin:_this
                ] [ sp:object spin:_this ;
                  sp:predicate foaf:isPrimaryTopicOf ;
                  sp:subject _:primaryTopicVar
                ] [ sp:object
                          [ sp:varName "y"^^xsd:string
                          ] ;
                  sp:predicate
                          [ sp:varName "x"^^xsd:string
                          ] ;
                  sp:subject _:primaryTopicVar
                ]) .

_:primaryTopicVar  sp:varName "primaryTopic"^^xsd:string .

# ====

<#DeleteFromGraphWithTopicTemplate> a spin:Template ;
    spin:body <#DeleteFromGraphWithTopic> ;
    rdfs:isDefinedBy <#> .

<#DeleteFromGraphWithTopic>    a       sp:DeleteWhere ;
      sp:text """DELETE WHERE {
    GRAPH ?g {
        ?this ?p ?o .
        ?primaryTopic foaf:isPrimaryTopicOf ?this .
        ?primaryTopic ?x ?y .
    } .
}"""^^xsd:string ;
      sp:where ([ a       sp:NamedGraph ;
                  sp:elements ([ sp:object
                                      [ sp:varName "o"^^xsd:string
                                      ] ;
                              sp:predicate
                                      [ sp:varName "p"^^xsd:string
                                      ] ;
                              sp:subject spin:_this
                            ] [ sp:object spin:_this ;
                              sp:predicate foaf:isPrimaryTopicOf ;
                              sp:subject _:primaryTopicVar
                            ] [ sp:object
                                      [ sp:varName "y"^^xsd:string
                                      ] ;
                              sp:predicate
                                      [ sp:varName "x"^^xsd:string
                                      ] ;
                              sp:subject _:primaryTopicVar
                            ]) ;
                  sp:graphNameNode
                          [ sp:varName "g"^^xsd:string
                          ]
                ]) .

_:primaryTopicVar  sp:varName "primaryTopic"^^xsd:string .